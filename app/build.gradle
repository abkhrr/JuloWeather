plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'androidx.navigation.safeargs.kotlin'
    id 'kotlin-parcelize'
    id 'org.jetbrains.kotlin.android'
    id 'dagger.hilt.android.plugin'
}

def configProperties = new Properties()
configProperties.load(new FileInputStream(file('config.properties')))

android {
    defaultConfig {
        applicationId androidAppId
    }

    buildTypes {
        debug {
            debuggable true
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField("String", "BASE_URL", configProperties['env.baseUrl'])
            buildConfigField("String", "X_API_KEY", configProperties['env.openWeatherApiKey'])
            buildConfigField("String", "BASE_IMAGE_URL", configProperties['env.baseUrlImage'])
        }
        staging {
            debuggable false
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField("String", "BASE_URL", configProperties['env.baseUrl'])
            buildConfigField("String", "X_API_KEY", configProperties['env.openWeatherApiKey'])
            buildConfigField("String", "BASE_IMAGE_URL", configProperties['env.baseUrlImage'])
        }
        release {
            debuggable false
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField("String", "BASE_URL", configProperties['env.baseUrl'])
            buildConfigField("String", "X_API_KEY", configProperties['env.openWeatherApiKey'])
            buildConfigField("String", "BASE_IMAGE_URL", configProperties['env.baseUrlImage'])
        }
    }
}

apply from: "$rootDir/build-system/android/android.gradle"
apply from: "$rootDir/build-system/common/common.gradle"
apply from: "$rootDir/build-system/dep-library/libs.gradle"
apply from: "$rootDir/build-system/logs/logs.gradle"
apply from: "$rootDir/build-system/support/support.gradle"
apply from: "$rootDir/build-system/test/test.gradle"


dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(":utils")
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.6.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.test:runner:1.4.0'
}